@page "/Articles/Delete/{Id:int}"

@inject NavigationManager NavigationManager
@inject IArticleRepository ArticleRepository
@inject IJSRuntime JsRuntime 

<h3>Delete</h3>

<form>
    <div class="form-group row">
        <label for="id" class="col-sm-2 col-form-label">ID</label>
        <div class="alert alert-info col-sm-5" role="alert">
            @Model.Id
        </div>
    </div>
    <div class="form-group row">
        <label for="title" class="col-sm-2 col-form-label">Title</label>
        <div class="alert alert-info col-sm-5" role="alert">
            @Model.Title
        </div>
    </div>
    <div class="form-group row">
        <label for="content" class="col-sm-2 col-form-label">Content</label>
        <div class="alert alert-info content col-sm-5" role="alert">
            @Model.Content
        </div>
    </div>
    <div class="form-group row">
        <label for="createdBy" class="col-sm-2 col-form-label">CreatedBy</label>
        <div class="alert alert-info col-sm-5" role="alert">
            @Model.CreatedBy &nbsp;
        </div>
    </div>
    <div class="form-group row">
        <label for="created" class="col-sm-2 col-form-label">Created</label>
        <div class="alert alert-info col-sm-5" role="alert">
            @Model.Created
        </div>
    </div>
    <div class="form-group">
        <a href="/Articles/Delete/@Model.Id" class="btn btn-danger" @onclick="btnDelete_Click">Delete</a>
        <a href="/Articles/Details/@Model.Id" class="btn btn-success">Cancel</a>
        <a href="/Articles" class="btn btn-secondary">List</a>
    </div>
</form>

@code {
    [Parameter]
    public int Id { get; set; }

    public Article Model { get; set; } = new Article();

    protected override async Task OnInitializedAsync()
    {
        Model = await ArticleRepository.GetArticleByIdAsync(Id);
    }

    protected async void btnDelete_Click()
    {
        bool isDelete = await JsRuntime.InvokeAsync<bool>("confirm", $"{Id}번 정말로 삭제하시겠습니까?");
        if (isDelete)
        {
            await ArticleRepository.DeleteArticleAsync(Id);
            NavigationManager.NavigateTo("/Articles");
        }
        else
        {
            await JsRuntime.InvokeAsync<object>("alert", "취소되었습니다.");
        }
    }
}

<style>
    .content {
        height: 150px;
    }
</style>
